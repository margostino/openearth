package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"

	"github.com/margostino/openearth/fetcher"
	"github.com/margostino/openearth/graph/model"
)

// Datasets is the resolver for the datasets field.
func (r *queryResolver) Datasets(ctx context.Context, id *string, name *string, category *string) ([]*model.Dataset, error) {
	return fetcher.FetchDatasets(id, name, category)
}

// NasaEarthdata is the resolver for the nasa_earthdata field.
func (r *queryResolver) NasaEarthdata(ctx context.Context, topicName *string) (*model.NasaEarthData, error) {
	return fetcher.FetchNasaEarthData(topicName)
}

// NasaRssFeeds is the resolver for the nasa_rss_feeds field.
func (r *queryResolver) NasaRssFeeds(ctx context.Context) ([]*model.NasaRssFeed, error) {
	return fetcher.FetchNasaRssFeeds()
}

// OuterSpaceObjects is the resolver for the outer_space_objects field.
func (r *queryResolver) OuterSpaceObjects(ctx context.Context, term *string) ([]*model.OuterSpaceObject, error) {
	return fetcher.FetchOuterSpaceObjects(term)
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
